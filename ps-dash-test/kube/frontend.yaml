kind: Service
apiVersion: v1
metadata:
  name: ps-dash
  namespace: perfsonar-platform
  labels:
    k8s-app: ps-dash
spec:
  type: NodePort
  ports:
    - name: http
      protocol: TCP
      port: 8050
      targetPort: 8050
  selector:
    k8s-app: ps-dash
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ps-dash
  namespace: perfsonar-platform
  labels:
    k8s-app: ps-dash
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod-nginx
    kubernetes.io/ingress.class: nginx
spec:
  tls:
    - hosts:
        - ps-dash.uc.ssl-hep.org
      secretName: autogenerated-for-ps-dash
  rules:
    - host: ps-dash.uc.ssl-hep.org
      http:
        paths:
          - path: /
            backend:
              serviceName: ps-dash
              servicePort: 8050
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ps-dash
  namespace: perfsonar-platform
  labels:
    k8s-app: ps-dash
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      k8s-app: ps-dash
  template:
    metadata:
      labels:
        k8s-app: ps-dash
    spec:
      terminationGracePeriodSeconds: 200  # wait for 15 minuted before forcibly terminating the pod
      containers:
        - name: ps-dash
          image: sandci/ps-dash:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8050
          readinessProbe:
            httpGet:
              path: /ready
              port: 8050
            initialDelaySeconds: 200
            periodSeconds: 10
          volumeMounts:
            - name: frontend-conf-volume
              mountPath: "/etc/ps-dash/"
          resources:
            requests:
              cpu: "4000m"
              memory: "15Gi"
            limits:
              cpu: "8000m"
              memory: "30Gi"
      volumes:
        - name: frontend-conf-volume
          secret:
            secretName: ps-dash-config
            items:
              - key: conf
                path: creds.key
